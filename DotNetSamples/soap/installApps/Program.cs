/////////////////////////////////////////////////////////////////////////////////////////////
//
// Codeproof MDM API SDK sample program. 
//
// Copyright (C) 2014, Codeproof Technologies Inc. All rights reserved. http://codeproof.com 
//
// Email us at support@codeproof.com for questions/comments/feedback.
//    
//////////////////////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using deployApps.CodeproofService;

namespace deployApps
{
    class Program
    {
        static string ProductId = "AFF8A4F8-319F-4B45-B1F5-AB31972192A5"; //do not change it
        static string ManagedNode = "iOS Devices"; //managed group name in Mobile Policy Manager
        static string BundleId = "com.acmecorp.testapp"; //your app bundle id

        static CodeproofServiceClient cpservice = new CodeproofServiceClient();
        static Authenticate AuthObj = new Authenticate();


        static void Main(string[] args)
        {
            //
            // The following sample C# code shows how to deploy enterprise iOS apps and app configurations programatically
            //

            Console.WriteLine("Started!");


            //API authentication info

            AuthObj.userid = "----Enter your login emailid---";
            AuthObj.apikey = "--API Key--------"; //get it at "https://www.codeproof.com/console/Account/Login?ReturnUrl=/console/MyAccount/Index" 

            //install app now.

            PushSoftware();

            Console.WriteLine("Waiting 180 secs...");

            System.Threading.Thread.Sleep(180000);

            //push configurations.

            Console.WriteLine("Pushing app configurations for: " + BundleId);

            PushManagedAppConfig();

            Console.WriteLine("Done!");
        }


        public static void PushSoftware()
        {
            Software[] softwares = cpservice.GetSoftwares(AuthObj);

            //clear all the softwares entries. 
            foreach (Software soft in softwares)
            {
                cpservice.DeleteSoftware(soft.Id);
            }

            string manfestUrl = "https://www.acmecorp.com/downloads/TestAppManifest.plist";  // change it to your actual manifest download url.

            //add a new entry
            cpservice.AddSoftware(AuthObj, "My iOS App", "ACME Corporations", "iOS", manfestUrl, "ManifestUrl", "1");

            cpservice.PingDevice(AuthObj, ManagedNode);
        }


        public static void PushManagedAppConfig()
        {
            CommandRecord cmd = new CommandRecord();

            string configblob =
                    "<dict>" + 
                        "<key>server</key>" + 
                        "<dict>" +
                           "<key>DEV</key>" +
                           "<string>dev-server </string>" +
                           "<key> PRODUCTION </key>" +
                           "<string>prod-server </string>" +
                           "<key> STAGING </key>" +
                           "<string>staging-server </string>" +
                           "<key> TEST </key>" +
                           "<string>test-server</string>" +
                        "</dict>" +
                    "</dict>";

            var Blobbytes = System.Text.Encoding.UTF8.GetBytes(configblob);
            string encodedBlob = System.Convert.ToBase64String(Blobbytes);

            cmd.Command = "appconfig"; 
            cmd.CommandName = "managed app config";
            cmd.Param1 = BundleId;
            cmd.Param2 = encodedBlob;
            cmd.Notes = "command generated by API";

            CommandRecord cmdupdated = cpservice.ExecuteCommandGroup(AuthObj, ManagedNode, ProductId, cmd);
        }
    }
}
